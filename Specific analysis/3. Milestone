
> 
#Barplot of genes with highest mean in FC over Erlotinib
genes_FC_erlotinb <- apply(e_foldchange_z_transformed, 1, mean)
genes_FC_erlotinb <- sort(abs(genes_FC_erlotinb), decreasing = TRUE)
par(oma =c(10,1,1,1))
barplot(genes_FC_erlotinb [1:20], main = "Genes with highest FC after erloinib treatment", ylab = "FC", las = 2)

genes_FC_erlotinb[1:20]

#Finde the row number with the name
which(rownames(e_foldchange_z_transformed) == "CHAC1") 
 
#colnames of e_foldchange with cellline instead of complete sample name
cellline <- sapply(colnames(e_foldchange), function(x){
colnames(annotation_sorted_by_cell_lines)[which(x == annotation_sorted_by_cell_lines, arr.ind = TRUE)[2]] })
colnames(e_foldchange) <- cellline
print(cellline)  

#colnames of e_foldchange with cellline instead of complete sample name
> cellline_z_transformed <- sapply(colnames(e_foldchange_z_transformed), function(x){
+     colnames(annotation_sorted_by_cell_lines)[which(x == annotation_sorted_by_cell_lines, arr.ind = TRUE)[2]]
+ })
> colnames(e_foldchange_z_transformed) <- cellline_z_transformed

grepl("CELLLINE_NAME", celline)  #funktioniert --> befehl schreiben für alle cellanotation [,1]
  
cellline_names <- cellline_annotation[,1]
print(cellline_names)
cellines_e_foldchange_z_transformed <- e_foldchange_z_transformed[0,]
print(cellines_e_foldchange_z_transformed)
grepl(paste0(cellline_names,collapse="|"), cellines_e_foldchange_z_transformed, ignore.case = TRUE) #gibt nichts aus

  

   #2. define a color palette with 9 chosen colors
   color_palette_cancertype <- c("aquamarine", "brown", "forestgreen", "chartreuse", "darkgoldenrod1", "cadetblue"    ,"purple", "firebrick1", "deepskyblue")
   names(color_palette_cancertype) <- levels(cellline_annotation$Cancer_type)
  
   #create vector containing a color name for each sample according to cancertype
   color_vector_cancertype <- sapply(colnames(fold_changes), function(x){
    unname(color_palette_cancertype[fold_changes[1, x]]) #1st row of FC contains cancertype 
   })
  

    #Color PCA according to cancertype
    par(oma = c(1, 1, 1, 10))
    #PC3 and PC4
   plot(pca$rotation[,3], pca$rotation[,4], col = color_vector_cancertype, pch = 19, xlab = "PC3", ylab = "PC4",        main = "PCA with FC of all samples")
    legend(x = 0.11, y = 0.06, legend = names(color_palette_cancertype), col = color_palette_cancertype, pch = 19,      xpd = "TRUE")
  
   rm(pca)